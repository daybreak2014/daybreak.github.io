{"meta":{"title":"晓数点","subtitle":"Above all else, show the data.","description":"","author":"XiaoData","url":"http://xiaoDataTech.github.io","root":"/"},"pages":[{"title":"","date":"2019-11-08T21:09:47.708Z","updated":"2019-11-08T21:09:47.708Z","comments":false,"path":"tags/index.html","permalink":"http://xiaodatatech.github.io/tags/index.html","excerpt":"","text":""},{"title":"about","date":"2019-11-08T21:10:29.000Z","updated":"2019-11-08T21:10:29.332Z","comments":true,"path":"about/index.html","permalink":"http://xiaodatatech.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"mysql+navicat","slug":"mysql-navicat","date":"2019-11-23T11:05:11.000Z","updated":"2019-11-23T13:04:36.129Z","comments":true,"path":"2019/11/23/mysql-navicat/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/23/mysql-navicat/","excerpt":"","text":"MySQL进入MySQL官方网站，点击MySQL Installer for Windows，选择MSI Installer下载至本地安装。 双击下载完成的安装包，勾选同意许可，选择Developer Default。 Developer Default开发测试模式：适用于小型、个人网站 Sever only服务器模式：适用于远程服务器 安装包会自动检测安装环境，并安装所需配件。选择Standalone MySQL Server，设置端口号Port: 3306，设置Root密码。一路Next即可完成安装。 在开始菜单点击MySQL8.0 Command Line Client，输入root密码，进入mysql数据库。输入show databases命令，显示当前数据库则安装成功。 Navicat进入Navicat官网，选择Windwons 64bit版本下载。 Navicat","categories":[],"tags":[]},{"title":"consumer-goods-retail","slug":"consumer-goods-retail","date":"2019-11-21T20:30:10.000Z","updated":"2019-11-21T21:08:59.638Z","comments":true,"path":"2019/11/22/consumer-goods-retail/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/22/consumer-goods-retail/","excerpt":"","text":"社会消费品零售总额是企业销售给个人和社会集团非生产、非经营的实物商品总额。从商品流通的最终环节——零售市场入手直接观察全社会实物商品的消费情况，可以反映全社会对实物商品消费需求的变化趋势，进而判断消费需求对宏观经济的影响。 社会消费品零售总额与最终消费支出在统计口径、范围上不同，只反映食物商品消费，不完全反应最终消费。限额以上单位采用全面调查法，根据企业数据超级汇总；限额以下单位采用抽样调查法，根据样本数据汇总推算。 社会消费品零售总额受人口增长、基本生活消费和公共消费等刚性因素影响，并且滞后与生产、建设领域，因此相对稳定。社会消费品零售总额实际增速，是通过去除商品零售价格指数的影响而得到的。而两个指数的统计范围不完全一致，因此使用实际增速时需要谨慎。","categories":[],"tags":[]},{"title":"固定资产投资","slug":"fixed-asset-investment","date":"2019-11-21T19:07:02.000Z","updated":"2019-11-21T20:10:45.251Z","comments":true,"path":"2019/11/22/fixed-asset-investment/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/22/fixed-asset-investment/","excerpt":"","text":"固定资产投资完成额是一定时期内建造和购置固定资产的费用总和。 固定资产投资分为固定资产投资（不含农户）和农户固定资产投资。农户固定资产投资，占比很小，约1%-2%左右。固定资产投资（不含农户），按月全面调查并公布。 固定资产投资（不含农户） = 500万元及以上建设项目投资 + 房地产开发投资目前统计局公布的固定资产投资增速为名义增速。固定资产投资（不含农户）按月计算，而固定资产投资价格指数按季编制，两个数据的统计与发布在时间上不同步。 固定资产投资（不含农户），一般可分解为以下四部分，对比观察。 房地产开发投资 制造业固定资产投资 基础设施固定资产投资 其他 固定资产投资不等于固定资本形成","categories":[],"tags":[]},{"title":"工业增加值增速","slug":"value-added-of-industry","date":"2019-11-21T17:48:18.000Z","updated":"2019-11-21T19:02:53.129Z","comments":true,"path":"2019/11/22/value-added-of-industry/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/22/value-added-of-industry/","excerpt":"","text":"定义工业增加值是一个国家或地区一定时期工业生产价值的增加变动。统计局公布的工业增加值，是规模以上工业增加值，仅统计年主营业务收入2000万元以上的工业企业。规模以上工业增加值，可占全部工业增加值的80%，代表性高。并且，按月统计、计算、公布，时效性强，是检测宏观经济趋势的重要指标。由于农历春节的影响，2005年起，1月、2月数据不再单独公布，仅公布1-2月累计数据。 统计范围变化情况如下表所示 时间 统计范围 企业数量 1994年 乡及乡以上工业企业 46万 1998年 国有和年主营业务收入500万远及以上的非国有企业 16.5万 2007年 年主营业务收入500万元及以上的工业企业 45.3万 2011年 年主营业务收入2000万元及以上的工业企业 34.4万 尽管经历过若干次规则调整，但不同年份的数据仍具有可比性。一方面，变更前后符合条件的企业范围基本在同一数量级，且剔除的一般为小企业，对工业增加值的整体影响很小。另一方面，工业增加值增速是根据同一规则计算的，保证了数据的可比性。 计算年度工业增加值采用“收入法”计算， 年度工业增加值 = 固定资产折旧 + 劳动者报酬 + 生产税净额 + 营业盈余月度工业增加值采用推算法， 月度工业增加值 = 月度工业总产值 \\times 工业增加值率其中，工业增加值率是通过上年度的成本费用调查取得的。 2004年以前，工业增加值增速采用不变价增加值法。现在采用价格指数缩减法：首先，由推算法得出现行价格月度工业增加；然后，用PPI剔除价格变动因素计算可比价格工业增加值；最后，以可比价格工业增加值除以基期工业增加值计算工业增加值增速。 解读工业增加值增速反映工业企业景气状况，与GDP增速的变化趋势紧密相关，可判断宏观经济走势。经济景气时，两者均上升，工业增加值增速上升速度更快；经济衰退时，两者均下降，工业增加值增速下降速度更快。工业占GDP三成以上，与各个产业联系紧密、与经济周期高度相关，并调节迅速反映灵敏，是GDP的领先指标。（VAI GDP增速图） 可分行业、分地区深入了解增长趋势。 月度工业增加值累计增速是规模以上工业企业增速，季度工业增加值累计增速是全部工业企业增速。","categories":[],"tags":[]},{"title":"价格指数","slug":"price-index","date":"2019-11-16T07:45:40.000Z","updated":"2019-11-16T18:24:01.281Z","comments":true,"path":"2019/11/16/price-index/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/16/price-index/","excerpt":"Consumer Price Index居民消费价格指数（Consumer Price Index，简称CPI），衡量一定时间内与居民生活有关的商品和服务的整体价格水平变动，可以反映宏观经济整体的通货膨胀或通货紧缩。CPI中的一篮子商品，按照消费支出的分类标准（COICOP），结合结合抽样调查资料确定，涵盖食品、烟酒及用品、衣着、家庭设备用品及服务、医疗保健及个人用品、交通和通信、娱乐教育文化用品及服务、居住等8大类，不包括奢侈品、投资品和工业品。一篮子商品，每5年更换一次，权重根据全国城乡居民家庭消费支出资料和部分调查资料计算。","text":"Consumer Price Index居民消费价格指数（Consumer Price Index，简称CPI），衡量一定时间内与居民生活有关的商品和服务的整体价格水平变动，可以反映宏观经济整体的通货膨胀或通货紧缩。CPI中的一篮子商品，按照消费支出的分类标准（COICOP），结合结合抽样调查资料确定，涵盖食品、烟酒及用品、衣着、家庭设备用品及服务、医疗保健及个人用品、交通和通信、娱乐教育文化用品及服务、居住等8大类，不包括奢侈品、投资品和工业品。一篮子商品，每5年更换一次，权重根据全国城乡居民家庭消费支出资料和部分调查资料计算。 上图给出了1978-2018年的CPI变化趋势。1980年，包产到户、农产品价格快速上涨；1985-1989年，开启城市化、大兴基建，水泥、建材等原材料上涨；1992-1996年，固定资产投资增速过快，信贷增速过大；1998-1999年，亚洲金融危机；2004、2007、2008年，食品价格快速上涨；2009年，美国次贷风暴；2019年，非洲猪瘟导致猪肉价格大幅上涨。上世纪80、90年代，全球通胀高企。进入2000年以后，通胀得以控制，CPI基本稳定。 2000年以后，CPI的一篮子商品中，波动较大的是食品价格。食品价格与CPI有很强的相关性，在一定程度上决定了CPI的变化。 Producer Price Index工业生产者出厂价格指数（Producer Price Index，简称PPI），衡量一定时期内工业企业产品的整体价格水平变动，亦可反映宏观经济整体的通货膨胀或通货紧缩。选取生产稳定、影响较大的工业产品作为代表，根据工业企业产品调查确定权重。按生产资料、生活资料分类：生产资料主要指中间消耗品，如煤炭、原油、钢材等，生活资料主要指生活消费品。 1985-1993年，价格管制逐步放开，生产投资加速增长；1997-2002你，亚洲金融危机，经济下行；2003-2008年，不断进口原油、铁矿等大宗商品，PPI新一轮上涨；2009年，世界金融危机；2010-2011年，四万亿政策及全球货币快速；2012年，欧债危机；2018年，中美贸易摩擦。 Housing Price Index未完待续！","categories":[],"tags":[{"name":"CPI","slug":"CPI","permalink":"http://xiaodatatech.github.io/tags/CPI/"},{"name":"PPI","slug":"PPI","permalink":"http://xiaodatatech.github.io/tags/PPI/"},{"name":"Macro","slug":"Macro","permalink":"http://xiaodatatech.github.io/tags/Macro/"}]},{"title":"Web 速查","slug":"html","date":"2019-11-09T15:42:45.000Z","updated":"2019-11-23T17:05:36.946Z","comments":true,"path":"2019/11/09/html/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/09/html/","excerpt":"HTML\\ 标签是一个页面的根元素，其他所有元素都是其后代。 \\标签包含页面中所有可见元素，比如链接、段落、图片……。 \\标签包含页面中抽象的基础信息（不显示）。 \\标签指定浏览器标签上显示的标题，只可包含文本，尽可能简洁准确。 \\、\\、\\、\\、\\、\\是标题标签，\\最大，\\最小，没有\\。","text":"HTML\\ 标签是一个页面的根元素，其他所有元素都是其后代。 \\标签包含页面中所有可见元素，比如链接、段落、图片……。 \\标签包含页面中抽象的基础信息（不显示）。 \\标签指定浏览器标签上显示的标题，只可包含文本，尽可能简洁准确。 \\、\\、\\、\\、\\、\\是标题标签，\\最大，\\最小，没有\\。 \\是段落标签，p表示paragraph，一组\\\\&lt;\\p>为一个段落。一个网页可有多个\\标签，\\标签中可存在子元素。 \\标签作为容器在页面中划分区域，div表示division。\\标签与\\类似，不过\\用于插入整块而\\用于插入一个词。 \\标签定义链接，a表示anchor。a中子元素也可作为链接，如图片链接。href属性指定目标地址，target属性指定在哪里打开页面。 target=&quot;_self&quot;，在当前页打开链接（默认）。target=&quot;_blank&quot;，在新标签页打开链接。 \\标签定义页面中的图片，不存在子标签。src（source）属性指定图片地址，支持所有常用图片格式: .gif、.jpg、.png、.svg… \\标签定义表格，与专有子标签在一起使用。 tr（table row）：定义行，出现一组就是一行，出现多组就是多行。td （table data）：定义单元格，一般包含在tr中。th （table head cell）：定义表头单元格，一般包含在thead中。thead （table head）：定义表头。tbody （table body）：定义表身。 \\r标签定义页头，是页面中的引导性内容；\\标签定义页脚，是页面中的补充性内容。\\、\\本身和\\没有区别，仅仅是让浏览器和搜索引擎更好解读，也有利于网页维护。 \\标签加载外部资源，比如样式表；\\标签加载脚本，比如JavaScript。 \\标签，不同浏览器解释不同，需明确指定type属性。\\标签内可插入文字或图片。 一般按钮：指定type=”button”，如\\确认\\&lt;/button>。提交按钮：指定type=”submit”，如\\提交\\&lt;/button>，提交表单。重置按钮：指定type=”reset”，如\\提交\\&lt;/button>，清空表单。 \\标签定义缩写，abbr表示abbreviation。 \\标签展示小段代码，\\标签展示大段代码。 \\标签接收用户输入，不同type属性侧重于不同的数据类型： \\ 默认值：输入文字，如用户名。\\： 密码输入，显示为小黑点。\\： 单选框，如性别（两个选项）。\\： 多选框，如爱好 。\\： 选择文件。\\： 重置表单。\\： 隐形输入框。\\： 按钮。（不推荐，&lt;\\button>可包含子元素，\\不行） \\标签定义下拉菜单，多选单选均可。 &lt;html&gt; &lt;head&gt; 基础信息 &lt;title&gt;标题&lt;\\title&gt; &lt;link href=&quot;base.css&quot;&gt; &lt;script src=&quot;base.js&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; 网页内容 &lt;h1&gt;1级标题&lt;/h1&gt; &lt;h2&gt;2级标题&lt;/h2&gt; &lt;h3&gt;3级标题&lt;/h3&gt; &lt;h4&gt;4级标题&lt;/h4&gt; &lt;h5&gt;5级标题&lt;/h5&gt; &lt;h6&gt;1级标题&lt;/h6&gt; &lt;p&gt;段落1&lt;\\p&gt; &lt;p&gt;段落2&lt;\\p&gt; &lt;div&gt;显示容器&lt;/div&gt; &lt;div&gt; &lt;div&gt;你是好人。&lt;/div&gt; &lt;/div&gt; &lt;a href=&quot;https://www.baidu.com&quot; target=&quot;_blank&quot;&gt;链接&lt;/a&gt; &lt;a href=&quot;https://baidu.com&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;xxx.jpg&quot;&gt; &lt;/a&gt; &lt;table border=&quot;1&quot;&gt; &lt;thead&gt; &lt;!--表头开始--&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;th&gt;城市&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;!--表头结束--&gt; &lt;tbody&gt; &lt;!--表身开始--&gt; &lt;tr&gt; &lt;td&gt;王XX&lt;/td&gt; &lt;td&gt;16&lt;/td&gt; &lt;td&gt;Beijing&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;李XX&lt;/td&gt; &lt;td&gt;19&lt;/td&gt; &lt;td&gt;Shanghai&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;!--表身结束--&gt; &lt;/table&gt; &lt;form&gt; 姓氏：&lt;input name=&quot;first_name&quot;&gt; 名字：&lt;input name=&quot;last_name&quot;&gt; &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt; &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt; &lt;/form&gt; &lt;abbr title=&quot;People&#39;s Republic of China&quot;&gt;PRC&lt;/abbr&gt; &lt;code&gt;print(&quot;hello&quot;)&lt;/code&gt; &lt;pre&gt; print(&quot;hello world!&quot;) print(&quot;I&#39;m back!&quot;) &lt;/pre&gt; &lt;/body&gt; &lt;/html&gt; CSS","categories":[],"tags":[{"name":"html","slug":"html","permalink":"http://xiaodatatech.github.io/tags/html/"},{"name":"css","slug":"css","permalink":"http://xiaodatatech.github.io/tags/css/"},{"name":"js","slug":"js","permalink":"http://xiaodatatech.github.io/tags/js/"}]},{"title":"GDP是什么","slug":"what-is-gdp","date":"2019-11-08T23:29:54.000Z","updated":"2019-11-16T08:09:54.552Z","comments":true,"path":"2019/11/09/what-is-gdp/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/09/what-is-gdp/","excerpt":"缘起19世纪时，还没有GDP的概念，那时研究经济的学者只能借助对一些日常生活中的观察，比如商店的销售情况、货物的运输情况等，来推测整体经济的运行情况。现代意义上的GDP概念，由美国经济学家Simon Kuznets在1934年提交给国会应对大萧条的报告中提出。Kuznets当时的想法是统一度量居民、公司和政府的所有经济活动。第一个正式的国名账户核算系统，可以追溯到1947年在英国经济学家Richard Stone领导下的国家联盟统计专家委员我向联合国统计委员会递交的一份报告。随后1953年，联合国在这份报告的基础上发布了第一个国际标准的国民账户核算系统（System of National Accounts，简称SNA），由此现代国民核算系统正式建立。Simon Kuznets和Richard Stone分别获得了1971年、1984年的诺贝尔经济学奖，以表彰他们在建立以GDP为核心的国民账户核算系统方面的贡献。","text":"缘起19世纪时，还没有GDP的概念，那时研究经济的学者只能借助对一些日常生活中的观察，比如商店的销售情况、货物的运输情况等，来推测整体经济的运行情况。现代意义上的GDP概念，由美国经济学家Simon Kuznets在1934年提交给国会应对大萧条的报告中提出。Kuznets当时的想法是统一度量居民、公司和政府的所有经济活动。第一个正式的国名账户核算系统，可以追溯到1947年在英国经济学家Richard Stone领导下的国家联盟统计专家委员我向联合国统计委员会递交的一份报告。随后1953年，联合国在这份报告的基础上发布了第一个国际标准的国民账户核算系统（System of National Accounts，简称SNA），由此现代国民核算系统正式建立。Simon Kuznets和Richard Stone分别获得了1971年、1984年的诺贝尔经济学奖，以表彰他们在建立以GDP为核心的国民账户核算系统方面的贡献。 定义GDP，英文全称 Gross domestic Product，翻译为国内生产总值。到底，什么是GDP呢？我们不妨看看一些权威机构给出的答案： 国家统计局, GDP是一个国家或地区的所有常驻单位在一定时期内生产的最终产品的价值总和。 OECD defines that, GDP is an aggregate measure of production equal to the sum of the gross values added of all resident and institutional units engaged in production and services (plus any taxes, and minus any subsidies, on products not included in the value of their outputs). IMF states that, GDP measures the monetary value of final goods and services—that are bought by the final user—produced in a country in a given period of time (say a quarter or a year). 在这个抽象的定义中包含着若干个重要的概念： 国家地区GDP的统计范围是有地域边界，既可以是单个国家（如中国），也可以是多国联盟（如欧盟）。 常驻单位GDP的统计对象是清晰明确的，一国经济领土内从事经济活动，并且有一定规模和时间的居民和机构。 一定时期GDP是一个流量概念，并非存量，衡量一段时间内的生产经营成果。 市场价值GDP是对市场价值的度量，各种商品和服务，以市场价格折算加总。市场价格本身隐含了买卖双方的偏好信息，在一定程度上与居民福利相关。 最终成果GDP只统计最终产品，不包括中间产品。最终产品不再用于生产，或转移至新产品，避免重复计算。 GDP本质上是一个市场经济的概念，而市场经济是一个收入、支出、生产的循环过程。出售商品和服务获得的收入，通过生产要素（人力、资本、土地等）支付给居民、企业和政府。剧名、企业和政府，又将收入支出，最终汇总为消费、投资、政府购买和净出口。企业生产商品和服务出售，重新形成循环，周而复始。 核算GDP本身可从三个角度来理解： 从收入角度，人力、资本、土地等生产要素的报酬，演变为居民、企业和政府收入之和，形成GDP。 从支出角度，GDP是最终商品和服务的市场价值之和。而居民、企业和政府购买商品和服务的行为决策，最终形成消费、投资、政府支出和净出口。 从生产角度，GDP是所有产品的价值增量之和。统计所有产品的价值增量并加总，即可形成GDP。 每一种角度恰好对应一种GDP的核算方法： 收入法GDP，从收入方面加总居民、企业和政府的收入。 GDP = 收入总量 = 劳动者报酬 + 公司盈余 + 生产税净额 + 固定资产折旧尽管很重要，但收入法GDP的状况略显尴尬，目前只能在投入产出表（Input-Output Table）中找到。而投入产出表，仅在尾数为0、2、5、7的年份公布。 支出法GDP，从需求方面计算产品的最终去向。 GDP = 最终去向 = 最终消费支出 + 资本形成总额 + 净出口其中， 最终消费支出 = 居民消费支出 + 政府消费支出 资本形成总额 = 固定资本形成总额 + 存货变动而固定资本又可分为有形资本（住宅、非住宅建筑、机器设备等）和无形资本，存货主要包括原财力、半成品、产成品。支出法GDP在发达国家很重要，欧美每季度公布的GDP数据均是由支出法得到的。中国的支出法GDP则按年度公布，与生产法GDP的数据存在一定差异，仍需完善。 生产法GDP，从生产方面衡量产品的价值增量。 GDP = 价值增量 = (第一、二、三产业)[总产出 - 中间投入]生产法GDP分季度核算和年度核算。季度核算细分至35个行业，大多使用相关指标推算，略微粗糙；年度核算细分成94个行业，充分利用财务统计资料，比较细致。目前，我国主要采用生产法和收入法混合计算，称为生产法GDP。统计局在每季度或年度下月中旬公布GDP数据。 上述三种方法核算GDP，从理论上讲应该是一致的。但由于资料来源不同，结果存在一定差异。GDP数据会随着初步核算、初步核实、最终核实的进度而进行修订。除此之外，经济普查还会对历史数据进行修订，包括总量与增速。对GDP历史数据的历次修订如下表所示 时间 修订 事项 2016 1952-2015年数据 改革研发支出（2008SNA） 2014 1952-2013年数据 2013第三次经济普查 2009 2005-2008年数据 2008第二次经济普查 2005 1993-2004年数据 2003第一次经济普查 1995 1978-1992年数据 1995第一次三产普查 1978年到2018年，整整40年， GDP从区区3600亿增长到了2018年90多万亿，成为世界第二大经济体。在40年间中国的GDP翻了250倍左右，这不得不说是一个奇迹。在GDP的总量图中，几乎看不到修订历史数据对GDP的影响。而在GDP的增速图中，除了个别年份有些许差异，大多数时候，修订历史数据均影响也不大。 解读名义GDP（Nominal GDP），又称现价GDP，统计局公布的GDP总量是以当期价格计算的。名义GDP等于产量乘以当期价格。 nGDP_t = Y_t \\times P_t产量增加和价格上升均引起名义GDP的增长。为了消除价格变动的因素，反映产出的实际变化，需要将不同时期的数据按某个固定基期价格折算。折算后的GDP叫做实际GDP（Real GDP），又称不变价GDP。 rGDP_t = Y_t \\times P_{base}在现实中，更关注的是实际GDP增速，简称GDP增速（GDP Growth）。 rGDP\\% = rGrowth_t = \\frac{rGDP_t-rGDP_{t-1}}{rGDP_{t-1}} = \\frac{Y_t-Y_{t-1}}{Y_{t-1}}根据GDP的定义简单推导，可得 nGDP\\% = nGrowth_t = \\frac{Y_tP_t-Y_tP_{t-1}+Y_tP_{t-1}-Y_{t-1}P_{t-1}}{Y_{t-1}P_{t-1}} \\approx \\frac{Y_t-Y_{t-1}}{Y_{t-1}} + \\frac{P_t-P_{t-1}}{P_{t-1}}因此通常可认为 nGDP\\% \\approx rGDP\\% + P\\%统计局定期公布的GDP增速都是以基期价格计算的实际GDP增速。我国自开始核算GDP以来，有1952、1957、1970、1980、1990、2000、2005、2010、2015共9个基期。GDP是衡量一个国家总体经济规模的最强有力的指标，下图给出了中国1952-2018年的GDP增速图。 1953-1977，25年间GDP从679亿增长到3250亿，成长为最初的4.78倍（扣除价格因素后4.25倍，年平均增速5.95%）；1978-1998，21年间GDP高速增长到8.5万亿，是1977年末的26.21倍（扣除价格因素后7.26倍，年平均增速9.9%）；1999-2018，又一个20年，GDP已经增长到了90万亿，是1998年末的10.57倍（扣除价格因素后仍有5.65倍，年平均增速9%）。再过20年会是什么样子呢，画面太美不敢想象，同时期的世界GDP平均增速只有3%左右。改革开放以前，经济大起大落，波动较大。为了更深入的分析GDP的变化，我们从1978年开始，分别计算1978-1990、1991-2000、2001-2010、2011-2015、2016至今共5个区间的年平均增速，如下图所示。 从图中可以看出，进入21世纪以后，中国的年平均增速开始从2000-2010年的10%左右下降到2010-2015年的8%左右，再到最近几年的6.7%左右，呈现出“L”型的增长模式。撇开2008年的金融危机造成的短期冲击，从2000开始的季度增速图可以更清楚的看到这一缓慢下降的趋势。这与曾经创造过经济奇迹的日本与韩国是十分相似的（?）。历史再一次说明了，只有经济稳定并持续增长，才是从贫穷走向富强的唯一选择。 中国对GDP的深入分析，可了解一个国家的经济结构及变化规律。 从产业角度，反映第一产业、第二、第三产业结构比例。 第一产业（产品直接取自自然界）主要是农业，在GDP中的比重由1978年的27.7%逐步降低到2019年的6.2%；第二产业（对初级产品再加工）主要是工业及建筑业，在GDP中的比重相对稳定，从47.7%小幅下降为39.8%；第三产业（提供各种服务）可简单理解为服务业，比重不断上升，从1978年的24.6%一路增长到了2019年的54.0%。产业结构变化符合产业升级规律：第一产业占比逐渐下降，第二产业占比稳定在40%，第三产业不断上升。未来，随着经济的持续发展，第二产业占比会进一步下降，而第三产业占比会继续上升。 虽然工业在GDP中的比重已经不是最大，但工业部门的波动通常远远大于其他部门。工业部门对GP的贡献率一直占绝对优势，常常主宰GDP的变化。政府调控宏观经济也主要借助于工业部门。 从需求角度，反映消费、投资、净出口所占比重。 家庭消费在GDP中的比重，从1978年的48.4%逐渐下降到了2018年的39.4%；政府消费相对稳定，变化不大；投资，从1978年的38.9%逐渐上升到了2018年的44.8%；净出口，随经济周期的变化而起伏，波动较大。 消费、投资和净出口，俗称“三驾马车”。尽管净出口占比很小，但波动够大，常常左右GDP的增速。同时，投资受政府政策的影戏，对GDP增速的影响也很大。 从地区角度，反映不同地区经济发展差异。（此小块视情况补充！） 世界与美国、日本、韩国相比较。（此部分有待进一步补充！） 在国家之间进行GDP的比较时，需要将采用不同货币度量的GDP数据转换成统一的货币。通常有两种办法，一种是采用当前货币汇率，另一种是采用购买力平价（Purchasing Power Parity，简称PPP）汇率。采用当前货币汇率，可以更好的反映一个国家的国际购买力水平。高GDP国家的物价水平往往高于低GDP国家，采用力平价汇率，可以有效减小因价格水平不同而造成的地区差异。 不足尽管GDP很重要，但它仍有很多不足。首先，GDP不能反映社会成本。经济增长过程中，对自然资源的消耗，对自然环境的破坏，都很难度量。其次，GDP不能反映增长质量。GDP是流量而不是存量，经济增长并不意味着财富增加，即使增加也可能存在地区间的不均衡发展。最后，GDP不能准确衡量社会效用。一个国家的整体效用，不仅包括经济收入，还包括闲暇、幸福、安全等，这些均无法度量。最后，让我们的视线再次回到Kuznets，细细品味他当年说过的话。 In 1934, “National Income, 1929–1932”: The valuable capacity of the human mind to simplify a complex situation in a compact characterization becomes dangerous when not controlled in terms of definitely stated criteria. With quantitative measurements especially, the definiteness of the result suggests, often misleadingly, a precision and simplicity in the outlines of the object measured. In 1962, “How To Judge Quality”: Distinctions must be kept in mind between quantity and quality of growth, between costs and returns, and between the short and long run. Goals for more growth should specify more growth of what and for what. 总结 一看总量，二看增速，三看构成（产业、需求），四看贡献（产业，需求），五横向比较","categories":[],"tags":[{"name":"Macro","slug":"Macro","permalink":"http://xiaodatatech.github.io/tags/Macro/"},{"name":"GDP","slug":"GDP","permalink":"http://xiaodatatech.github.io/tags/GDP/"}]},{"title":"GitHub个人博客","slug":"github-blog","date":"2019-11-08T22:47:52.000Z","updated":"2019-11-23T13:45:54.529Z","comments":true,"path":"2019/11/09/github-blog/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/09/github-blog/","excerpt":"一、环境配置GitHub登录GitHub， 注册一个账号。点击页面右上角+号，新建仓库 New repository ，仓库名称 Repository name 中输入 yourname.github.io ，创建仓库 Create repository 。 Git登录Git，下载适用于当前操作系统的最新版本，并安装。安装过程中，建议勾选 Windows Explorer integartion 。安装完成后，右键我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 系统变量Path编辑，添加 C:\\Program Files\\Git\\cmd 。 打开Git Bash，输入 $ git config --global user.name &quot;yourname&quot; $ git config --global user.email &quot;youremail@example.com&quot; $ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 在 C:\\Users\\Yourname\\.ssh 中找到刚生成的id_rsa.pub文件，打开并复制其中的内容。登录Github，进入上一步新建的仓库 yourname.github.io ，然后点击 Settings -&gt; Deploy keys -&gt; Add deploy key 。粘贴刚刚复制的内容到 key 空白栏中，选中 Allow write access 添加新Key。","text":"一、环境配置GitHub登录GitHub， 注册一个账号。点击页面右上角+号，新建仓库 New repository ，仓库名称 Repository name 中输入 yourname.github.io ，创建仓库 Create repository 。 Git登录Git，下载适用于当前操作系统的最新版本，并安装。安装过程中，建议勾选 Windows Explorer integartion 。安装完成后，右键我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 系统变量Path编辑，添加 C:\\Program Files\\Git\\cmd 。 打开Git Bash，输入 $ git config --global user.name &quot;yourname&quot; $ git config --global user.email &quot;youremail@example.com&quot; $ ssh-keygen -t rsa -C &quot;youremail@example.com&quot; 在 C:\\Users\\Yourname\\.ssh 中找到刚生成的id_rsa.pub文件，打开并复制其中的内容。登录Github，进入上一步新建的仓库 yourname.github.io ，然后点击 Settings -&gt; Deploy keys -&gt; Add deploy key 。粘贴刚刚复制的内容到 key 空白栏中，选中 Allow write access 添加新Key。 如果需要在同一台电脑管理多个Git账户，则需要执行以下命令 $ git config --global --unset user.name &quot;yourname&quot; $ git config --global --unset user.email &quot;yourname@email.com&quot; $ ssh-keygen -t rsa -C &quot;user1@example.com&quot; -f ~/.ssh/id1_rsa $ ssh-keygen -t rsa -C &quot;user2@example.com&quot; -f ~/.ssh/id2_rsa 将 ~/.ssh/ 目录中新生成的公钥 id1_rsa.pub 和 id2_rsa.pub 分别添加到不同的Git账户中。在 ~/.ssh/ 目录下新建 config 文件，添加如下内容 # 配置 user1 Github Host user1 HostName github.com User user1@exmaple.com PreferredAuthentications publickey IdentityFile ~/.ssh/id1_rsa # 配置 user2 GitLab Host user2 HostName gitlab.com User user2@example.com PreferredAuthentications publickey IdentityFile ~/.ssh/id2_rsa 打开Git Bash，输入以下命令，验证是否成功 $ ssh -T git@user1 Git常用命令见附录A。 Nodejs登录Node.js， 下载最新版本并安装。安装后添加系统环境变量C:\\Program Files\\nodejs\\ 。 打开Git Bash，输入 $ node -v $ npm -v #返回版本号，则安装成功 Cmder登录Cmder， 下载最新版本。解压至安装位置，例如 C:\\Program Files\\ ，添加系统环境变量 C:\\Program Files\\cmder\\ 。 以管理员权限打开命令行，执行以下命令，可将 Cmder here 添加到右键菜单。 $ Cmder.exe /REGISTER ALL Typora登录Typora， 下载最新版本并安装。Typora是一款简洁并且高效的Markdown编辑器，支持即时渲染，所见即所得，使写Markdown文件变得优雅流畅。 Markdown常用语法见附录B。 二、Hexo 部署Hexo 安装Hexo是一个快速、简洁且高效的静态博客框架，搭配GitHub和Typora使用可事半功倍。前期搭建好环境后，博客作者可以从网页技术中脱身出来，专注于文字内容的创作和思维逻辑的探索。 在电脑的任意位置，新建一个文件夹，例如 E:\\Project\\Blog (下文简称为 Blog文件夹 )。进入该文件夹，右键 Cmder Here ，输入 $ npm install -g hexo-cli #安装hexo $ hexo -v #返回版本号，则hexo安装成功 $ hexo init [folder] #初始化， 未设置folder，默认在当前文件夹 $ npm install #npm自动安装所需的文件 $ npm install hexo-deployer-git --save Hexo 配置打开 Blog文件夹 目录下的 _config.yml 文件，做如下更改 # Site title: XXX #网站标题 description: XXX #网站描述 author: XXX #作者 language: zh-CN #设置语言 # Writing post_asset_folder: true #新建文章时自动生成同名文件夹，方便管理相关资源 # Extensions theme: next #设置主题 # Deployment deploy: type: git #配置deploy，采用SSH地址 repo: git@github.com:yourname/yourname.github.io.git branch: master #多账户时，git@user1: 执行 $ hexo generate 命令，生成 .deploy_git/.git/config 文件后，在.deploy_git/.git/config 文件中，添加如下内容 [user] name = user1 email = user1@example.com 或者在 .deploy_git/.git/config 文件，右键 Cmder Here ，输入以下命令 $ git config user.name &quot;yourname&quot; $ git config user.email &quot;yourname@email.com&quot; NexT 配置NexT主题是Hexo的一个扩展主题，简洁易用。最初是由iissnan开发的，现在由NexT社区维护。最简单的安装方法就是，进入 Blog文件夹 ，右键 Cmder Here ，输入 $ git clone https://github.com/theme-next/hexo-theme-next themes/next 添加页面在Cmder中，输入命令 $ hexo new page tags #添加标签页面 $ #hexo new page about #添加关于页面 $ #hexo new categories #添加分类页面 编辑 Blog/source/ 文件夹下生成的相应的 index.md 文件 title: 标签 date: 2019-11-04 04:40:31 type: &quot;tags&quot; comments: false 设置外观打开 themes/next/ 目录下的 _config.yml 文件 #shceme: Muse #大量留白 shceme: Mist #紧凑有序 #scheme: Pisces #清新碧玉 设置菜单 menu: home: / || home #主页 #about: /about/ || user #关于页面 tags: /tags/ || tags #标签页 #categories: /categories/ || th archives: /archives/ || archive #归档页 设置侧栏 sidebar: position: right #右侧 display: hide #隐藏，可手动展开 设置头像 avatar: url: /images/avatar.jpg #头像图片置于相应位置 rounded: true #圆角图标 社交链接 social: GitHub: https://github.com/yourname || github Weibo: https://weibo.com/yourname || weibo github_banner: enable: true #开启GitHub右上角横幅 permalink: https://github.com/yourname 设置打赏 reward_settings: enable: true comment: Donate comment here. reward: wechatpay: /images/wechatpay.png alipay: /images/alipay.png bitcoin: /images/bitcoin.png 设置脚注 footer: since: 2019 powered: enable: false # Hexo link (Powered by Hexo). version: false # Version info of Hexo after Hexo link (vX.X.X). theme: enable: false # Theme &amp; scheme info link (Theme - NexT.scheme). version: false # Version info of NexT after scheme info (vX.X.X). 阅读次数统计 busuanzi_count: enable: true total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: true post_views_icon: eye 本地搜索进入 Blog文件夹 ，右键 Cmder Here ，输入命令 $ npm install hexo-generator-searchdb 打开 Blog文件夹 下的 _config.yml 文件，添加如下内容 search: path: search.xml field: post format: html limit: 10000 编辑 themes/next/ 目录下的 _config.yml 文件 local_search: enable: true 图片居中将 themes/next/source/css/_schemes/Mist/_posts-expand.styl 文件中 .post-body img { margin-left: 0; } 修改为 .post-body img { margin-center: 0; } 插入图片时，可执行以下任一语句 {% image img.png 'img' '' %} #Markdown &lt;img src=&quot;{% asset_path kuznets.jpg %}&quot;&gt; {% asset_img kuznets.jpg %} #Hexo tag 或者直接使用新版NexT的Tag Plugins {% gp 2-1 %} {% asset_img img1.jpg [title1] %} {% asset_img img1.jpg [title2] %} {% endgp %} 设置公式编辑 themes/next/ 目录下的 _config.yml 文件 math: per_page: true mathjax: enable: true 需要渲染公式的博文，在Front-matter加入语句 mathjax: true 选择 hexo-renderer-kramed 渲染公式，在 Blog文件夹 右键 Cmder Here ，输入命令 $ npm uninstall hexo-renderer-marked $ npm install hexo-renderer-kramed Indigo 配置折腾了许久NexT最新版主题，但在移动端显示效果欠佳，遂采用Indigo主题，最后选择的是一个Indigo的改良版（等以后有时间再根据自己需要修改主题）。 进入 Blog文件夹 ，右键 Cmder Here ，输入 $ git clone https://github.com/abelsu7/hexo-theme-indigo-plus.git themes/indigo-plus 编辑 Blog文件夹 下的 _config.yml 文件 # Themes: https://hexo.io/themes/ theme: indigo-plus # Home page setting index_generator: path: &#39;&#39; per_page: 10 order_by: top: -1 #文章置顶，先top后date date: -1 mathjax: true #开启MathJax数学公式 进入 Blog文件夹 ，右键 Cmder Here ，输入命令 $ npm install hexo-renderer-less --save #less用作css预处理 $ npm install hexo-generator-json-content --save #站内搜索 $ npm install hexo-helper-qrcode --save #微信二维码 $ npm uninstall hexo-renderer-marked --save #卸载marked渲染引擎 $ npm install hexo-renderer-kramed --save #安装kramed渲染引擎 $ npm install hexo-asset-image@0.0.3 --save #最新版image路径错误 进入 Blog文件夹 中的 scaffolds文件夹，编辑以下文件：draft.md: --- title: {{ title }} category: - tags: - date: {{ date }} top: 1 --- page.md: --- layout: page title: {{ title }} date: {{ date }} top: 1 --- post.md: --- title: {{ title }} category: - tags: - date: {{ date }} top: 1 typora-root-url: {{ title }}/ --- Hexo 体验进入 Blog文件夹 ，右键 Cmder Here ，输入命令 $ hexo generate #生成静态文件 $ hexo server #启用服务器 此时，在浏览器中输入 http://localhost:4000/ 可在本地查看个人博客。 写博客并发布文章，只需在 Cmder 中输入 $ hexo new post &quot;article&quot; #新建一篇博文 $ hexo clean #清除缓存 $ hexo generate #生成静态文件 $ hexo deploy #部署网站至GitHub 至此，个人博客已成功建立，在浏览器中输入 yourname.github.io 即可查看。 这下不能再拖了，得专心写文章了。 附录A. Git 常用命令$ git status #查看仓库状态 $ git clone #克隆原始仓库 $ git remote #列出已经存在的远端仓库 $ git remote -v #列出远端仓库及url $ git remote set-url #更改远端仓库url $ git add #提交所有变化到暂存区 $ git commit #将暂存区改动提交到本地版本 $ git commit -a #将暂存区改动和新修改文件提交到本地版本 $ git pull #把本地仓库推送到远端 $ git push #把远端仓库拉回到本地 B. Markdown 常用语法# 一阶标题 ## 二阶标题 ### 三阶标题 #### 四阶标题 ##### 五阶标题 ###### 六阶标题 **加粗内容** *倾斜内容* ~~删除内容~~ 1.2.3. 有序列表 +-* 无序列表 --- 分割线 [超链接](https://www.xxx.com) {% image ./image.jpg '图片' '' %}","categories":[],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://xiaodatatech.github.io/tags/Hexo/"},{"name":"NexT","slug":"NexT","permalink":"http://xiaodatatech.github.io/tags/NexT/"},{"name":"Cmder","slug":"Cmder","permalink":"http://xiaodatatech.github.io/tags/Cmder/"},{"name":"GitHub","slug":"GitHub","permalink":"http://xiaodatatech.github.io/tags/GitHub/"},{"name":"Typora","slug":"Typora","permalink":"http://xiaodatatech.github.io/tags/Typora/"},{"name":"Indigo","slug":"Indigo","permalink":"http://xiaodatatech.github.io/tags/Indigo/"}]},{"title":"hello","slug":"hello","date":"2019-11-08T19:05:45.000Z","updated":"2019-11-08T22:46:06.487Z","comments":true,"path":"2019/11/09/hello/","link":"","permalink":"http://xiaodatatech.github.io/2019/11/09/hello/","excerpt":"Some people feels the rain, others just get wet.","text":"Some people feels the rain, others just get wet. harry1","categories":[],"tags":[]}]}